{"version":3,"sources":["components/Nav.js","context.js","components/AddNote.js","components/Note.js","components/NoteList.js","components/EditNote.js","reducer.js","App.js","index.js"],"names":["Nav","NotesContext","React","createContext","currentNote","notes","id","text","AddNote","useContext","dispatch","state","useState","value","setValue","ref","useRef","useEffect","current","focus","className","onSubmit","event","preventDefault","trim","alert","type","payload","action","onChange","target","Note","note","onClick","NoteList","map","i","EditNote","name","cols","rows","style","textAlign","reducer","newNote","uuid","addedNotes","deletedNotes","filter","updatedNote","updatedNotesIndex","findIndex","slice","App","initialState","useReducer","notesReducer","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.adc2d204.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Nav() {\n  return (\n    <nav>\n      <div>Online Note Making App</div>\n    </nav>\n  );\n}\n","import React from 'react';\r\n\r\nconst NotesContext = React.createContext({\r\n  currentNote: null,\r\n  notes: [\r\n    { id: 1, text: 'Homework, food, dance, study, sleep' },\r\n    { id: 2, text: 'Take out trash' },\r\n    { id: 3, text: 'Clean Your Room' }\r\n  ]\r\n});\r\n\r\nexport default NotesContext;","import React, { useState, useContext, useRef, useEffect } from 'react';\nimport NotesContext from '../context';\n\nexport default function AddNote() {\n  const { state, dispatch } = useContext(NotesContext);\n  const [value, setValue] = useState('');\n\n  let ref = useRef();\n\n  useEffect(() => {\n    ref.current.focus();\n  });\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (value.trim() === '') {\n      alert('Cannot add a blank note');\n    } else {\n      dispatch({ type: 'ADD_NOTE', payload: value });\n      setValue('');\n    }\n  };\n\n  return (\n    <div className='note-form'>\n      <form onSubmit={handleSubmit} action=''>\n        <input type='text' ref={ref} onChange={handleChange} value={value} />\n        <button>Add note</button>\n      </form>\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport NotesContext from '../context';\n\nexport default function Note({ note }) {\n  const { dispatch } = useContext(NotesContext);\n\n  return (\n    <div className='note'>\n      <p>{note.text}</p>\n      <div className='btn-container'>\n        <button\n          onClick={() => dispatch({ type: 'SET_CURRENT_NOTE', payload: note })}\n          className='edit'\n        >\n          Edit\n        </button>\n        <button\n          onClick={() => dispatch({ type: 'DELETE_NOTE', payload: note.id })}\n          className='delete'\n        >\n          Delete\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport Note from './Note';\nimport NotesContext from '../context';\n\nexport default function NoteList() {\n  const { state } = useContext(NotesContext);\n\n  return (\n    <div className='notes-container'>\n      {state.notes.map((note, i) => {\n        return <Note note={note} key={i} />;\n      })}\n    </div>\n  );\n}\n","import React, { useState, useContext, useRef, useEffect } from 'react';\nimport NotesContext from '../context';\n\nexport default function EditNote() {\n  const { state, dispatch } = useContext(NotesContext);\n  const [value, setValue] = useState(state.currentNote.text);\n\n  let ref = useRef();\n\n  useEffect(() => {\n    ref.current.focus();\n  });\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (value.trim() === '') {\n      alert('Cannot add a blank note');\n    } else {\n      dispatch({ type: 'UPDATE_NOTE', payload: value });\n      setValue('');\n    }\n  };\n\n  return (\n    <div className='note-form'>\n      <form onSubmit={handleSubmit} action=''>\n        <textarea\n          ref={ref}\n          onChange={handleChange}\n          value={value}\n          name=''\n          id=''\n          cols='30'\n          rows='10'\n        />\n        <div style={{ textAlign: 'right' }}>\n          <button>Update note</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import {v4 as uuid} from 'uuid';\r\nexport default function reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'ADD_NOTE':\r\n      const newNote = {\r\n        id: uuid(),\r\n        text: action.payload\r\n      };\r\n\r\n      const addedNotes = [...state.notes, newNote];\r\n\r\n      return {\r\n        ...state,\r\n        notes: addedNotes\r\n      };\r\n    case 'DELETE_NOTE':\r\n      const deletedNotes = state.notes.filter(\r\n        note => note.id !== action.payload\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        notes: deletedNotes\r\n      };\r\n    case 'SET_CURRENT_NOTE':\r\n      return {\r\n        ...state,\r\n        currentNote: action.payload\r\n      };\r\n    case 'UPDATE_NOTE':\r\n      const updatedNote = {\r\n        ...state.currentNote,\r\n        text: action.payload\r\n      };\r\n\r\n      const updatedNotesIndex = state.notes.findIndex(\r\n        note => note.id === state.currentNote.id\r\n      );\r\n\r\n      const updatedNotes = [\r\n        ...state.notes.slice(0, updatedNotesIndex),\r\n        updatedNote,\r\n        ...state.notes.slice(updatedNotesIndex + 1)\r\n      ];\r\n\r\n      return {\r\n        currentNote: null,\r\n        notes: updatedNotes\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import React, { useContext, useReducer } from 'react';\nimport Nav from './components/Nav';\nimport AddNote from './components/AddNote';\nimport NoteList from './components/NoteList';\nimport EditNote from './components/EditNote';\nimport NotesContext from './context';\nimport notesReducer from './reducer';\n\nfunction App() {\n  const initialState = useContext(NotesContext);\n  const [state, dispatch] = useReducer(notesReducer, initialState);\n  return (\n    <NotesContext.Provider value={{ state, dispatch }}>\n      <Nav />\n      {state.currentNote === null ? (\n        <div>\n          <AddNote />\n          <NoteList />\n        </div>\n      ) : (\n        <EditNote />\n      )}\n    </NotesContext.Provider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport './App.css';\n\nReactDOM.render(\n  <App/>,\n  document.getElementById(\"root\")\n  );\n"],"sourceRoot":""}